/*
 * generated by Xtext 2.17.1
 */
package circus.robocalc.robosim.textual

import circus.robocalc.robochart.textual.RoboChartQualifiedNameConverter
import circus.robocalc.robochart.textual.scoping.RoboChartImportURIGlobalScopeProvider
import circus.robocalc.robochart.textual.scoping.RoboChartImportedNamespaceAwareLocalScopeProvider
import circus.robocalc.robosim.textual.scoping.RoboSimScopeProvider
import com.google.inject.Binder
import com.google.inject.name.Names
import org.eclipse.xtext.generator.IOutputConfigurationProvider
import org.eclipse.xtext.naming.IQualifiedNameConverter
import org.eclipse.xtext.scoping.IGlobalScopeProvider
import org.eclipse.xtext.scoping.IScopeProvider
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
class RoboSimRuntimeModule extends AbstractRoboSimRuntimeModule {
	override Class<? extends IGlobalScopeProvider> bindIGlobalScopeProvider() {
    	return RoboChartImportURIGlobalScopeProvider
	}
	def Class<? extends IQualifiedNameConverter> bindIQualifiedNameConverter() {
		return RoboChartQualifiedNameConverter
	}
	override Class<? extends IScopeProvider> bindIScopeProvider() {
		return RoboSimScopeProvider
	}
	def Class<? extends IOutputConfigurationProvider> bindIOutputConfigurationProvider() {
		return RoboSimOutputConfigurationProvider
	}	
	
	override void configureIScopeProviderDelegate(Binder binder) {
		binder.bind(IScopeProvider)
		.annotatedWith(Names.named(AbstractDeclarativeScopeProvider.NAMED_DELEGATE))
		.to(RoboChartImportedNamespaceAwareLocalScopeProvider)
	}
}
